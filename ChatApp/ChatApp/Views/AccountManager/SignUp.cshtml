@model Model.AddEditUserViewmodel

@{
    ViewBag.Title = Resources.Users.SignUp_Title;
}

<div class="container">

    @using (Html.BeginForm("SignUp", "AccountManager", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.AntiForgeryToken()


        <div class="form-horizontal col-md-8">
           
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
          <div class="form-group a">
     
            @Html.LabelFor(model => model.UserViewModel.Firstname, htmlAttributes: new { @class = "control-label col-md-2 necessaryField" })

              <div class="col-md-10">
                 
                  @Html.EditorFor(model => model.UserViewModel.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.UserViewModel.Firstname, "", new { @class = "text-danger" })
              </div>

          </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserViewModel.Lastname, htmlAttributes: new { @class = "control-label col-md-2 necessaryField" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserViewModel.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserViewModel.Lastname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserViewModel.Username, htmlAttributes: new { @class = "control-label col-md-2 necessaryField" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserViewModel.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserViewModel.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserViewModel.Password, htmlAttributes: new { @class = "control-label col-md-2 necessaryField" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.UserViewModel.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserViewModel.Password, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.UserViewModel.Confirmation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.UserViewModel.Confirmation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserViewModel.Confirmation, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.UserViewModel.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserViewModel.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserViewModel.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserViewModel.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserViewModel.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserViewModel.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.UserViewModel.RoleId, "RoleId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("RoleId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserViewModel.RoleId, "", new { @class = "text-danger" })
                    </div>
                </div>*@


            <div class="form-group">
                <div class="col-md-2"></div>
                <div class="col-md-10">
                    @Html.RadioButtonFor(model => model.UserViewModel.RoleId, "1011") @Html.Label(Resources.Users.InstroctorRole)
                    @Html.RadioButtonFor(model => model.UserViewModel.RoleId, "1012") @Html.Label(Resources.Users.StudentRole)
                    @Html.ValidationMessageFor(model => model.UserViewModel.RoleId, "", new { @class = "text-danger" })

                </div>


            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value=@Resources.Users.Create_btn class="btn btn-default btn-success btn-lg" />
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <br />
            <br />
            <br />

            <br />
            <br />
            <br />


            <img src="~/UserProfileImage/Profile.png" id="previewImage" width="250" height="250" />
            <hr />
            <br />
            <div class="container">
                <div class="upload-btn-wrapper col-md-6">
                    <form runat="server">
                        <button class="btn btn-primary upload_btn">@Resources.Users.Upload_btn</button>
                        <input type="file" name="ImageFile" id="imgInp" />
                    </form>

                </div>
                <div id="removeParent" hidden><input type="button" id="btnRemoveProfile" value=@Resources.Users.Remove_btn class="btn btn-danger upload_btn btn-xs  col-md-6" /></div>

            </div>
            <div>              
                @Html.ValidationMessageFor(model => model.UserViewModel.ProfileImage, "", new { @class = "text-danger" })
            </div>


        </div>

    }

</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#previewImage').attr('src', e.target.result);
                $('#removeParent').removeAttr('hidden');

            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#imgInp").change(function () {
        readURL(this);
    });

    $(document).ready(function () {
        $('#btnRemoveProfile').click(function () {
            $("#imgInp").val('');
            $('#previewImage').attr('src', "~/UserProfileImage/Profile.png");

        })
    })


</script>

<link rel="stylesheet" type="text/css" href="~/Content/ProfileImage.css" />


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
