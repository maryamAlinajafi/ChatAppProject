@model Model.AddEditUserViewmodel
    <br />

<html>
<head>
    <link rel="stylesheet" type="text/css" href="~/Content/ProfileImage.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/lightbox.min.css" />
    <script type="text/javascript" src="~/Scripts/lightbox-plus-jquery.min.js"></script>

</head>
<body>



   <hr />

    <div class="container">
        @using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.ValidationSummary(true)

            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.UserViewModel.ID)
            @Html.HiddenFor(model => model.UserViewModel.Password)
            @Html.HiddenFor(model => model.UserViewModel.Confirmation)
            @Html.HiddenFor(model => model.UserViewModel.ProfileImage)
            @Html.HiddenFor(model => model.UserViewModel.RoleId)
            @Html.HiddenFor(model => model.UserViewModel.Status)

        <div class="form-horizontal col-md-3">
            <br />
            <br />
            <br />

            @if (String.IsNullOrEmpty(Model.UserViewModel.ProfileImage))
            {
                <img src="~/UserProfileImage/Profile.png" id="image" width="200" height="200" />
            }
            else
            {
                <div class="picture">
                    <a href="@Url.Content(Model.UserViewModel.ProfileImage)" data-lightbox="mygallery"><img src="@Url.Content(Model.UserViewModel.ProfileImage)" id="image" width="200" height="200" /></a>
                </div>
            }
            <hr />
            <div class="upload-btn-wrapper">
                <button class="btn upload_btn">@Resources.Users.Upload_btn</button>
                <input type="file" name="ImageFile" id="imgInp" />
            </div>
            

        </div>


            <div class="form-horizontal col-md-9">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UserViewModel.ID)

                <div class="form-group">
                    @Html.LabelFor(model => model.UserViewModel.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserViewModel.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserViewModel.Firstname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserViewModel.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserViewModel.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserViewModel.Lastname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserViewModel.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserViewModel.Username, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserViewModel.Username, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserViewModel.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserViewModel.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserViewModel.EmailAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserViewModel.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserViewModel.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserViewModel.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value=" ویرایش " class="btn btn-default btn-success" />
                        <a href="https://localhost:44355/Home" class="btn btn-default btn-danger">@Resources.Users.Cancle_btn </a>
                    </div>
                </div>
            </div>

        }

    </div>









    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#image').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#imgInp").change(function () {
            readURL(this);
        });

        $(document).ready(function () {
            $('#btnRemoveProfile').click(function () {
                $("#imgInp").val('');
                $('#image').attr('src', "~/UserProfileImage/Profile.png");

            })
        })


    </script>
</body>
</html>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
