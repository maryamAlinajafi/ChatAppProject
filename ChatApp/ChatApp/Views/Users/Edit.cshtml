@model Model.AddEditUserViewmodel
@{
    ViewBag.Title = "Edit My Profile Info";


}

<h2>Edit My Profile Info</h2>

<div class="container">
    @using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.UserViewModel.ID)
        @Html.HiddenFor(model => model.UserViewModel.Password)
        @Html.HiddenFor(model => model.UserViewModel.Confirmation)
        @Html.HiddenFor(model => model.UserViewModel.ProfileImage)
        @Html.HiddenFor(model => model.UserViewModel.RoleId)
        @Html.HiddenFor(model => model.UserViewModel.Status)

        <div class="form-horizontal col-md-3">
            <br />
            <br />
            <br />
            @if (String.IsNullOrEmpty(Model.UserViewModel.ProfileImage))
            {
                <img src="~/UserProfileImage/Profile.png" id="image" width="200" height="200" />

            }
            else
            {
                <img src="@Url.Content(Model.UserViewModel.ProfileImage)" id="image" width="200" height="200" />

            }
            <hr />
            <div id="remove"><input type="button" id="btnRemoveProfile" value="Remove Image" class="btn btn-xs btn-danger" /></div>
            <br />
            <input type="file" name="ImageFile" id="imgInp" />

        </div>


        <div class="form-horizontal col-md-9">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.UserViewModel.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.UserViewModel.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserViewModel.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserViewModel.Firstname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserViewModel.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserViewModel.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserViewModel.Lastname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserViewModel.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserViewModel.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserViewModel.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserViewModel.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserViewModel.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserViewModel.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserViewModel.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserViewModel.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserViewModel.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value=" ویرایش " class="btn btn-default btn-success" />
                    <a href="https://localhost:44355/Home" class="btn btn-default btn-danger">Cancle </a>
                </div>
            </div>
        </div>

    }

</div>









<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#image').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#imgInp").change(function () {
        readURL(this);
    });

    $(document).ready(function () {
        $('#btnRemoveProfile').click(function () {
            $("#imgInp").val('');
            $('#image').attr('src', "~/UserProfileImage/Profile.png");

        })
    })


</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
